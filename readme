##############################################################
# Author:   Pulkit Jain                                      #
# File:     readme.txt                                       #
# Details:  Running the program				     #
# Email ID: jain.pul@husky.neu.edu                           #
##############################7###############################

Steps to run the code

1. Create a ubuntu LTS instance on aws
2. Open the instance created and upload the input file and python script(rasp_util.py) to the home folder
3. Once the files have been copied, run the steps 0 to 7 given in rasp_util.py and then run the python script
4. Copy aws-hazelcast.xml and logback.xml file from RaspMR/src/main/resources/ to RaspMR and edit aws-hazelcast.xml
	4.1 replace <aws enabled="true”> . . . </aws> with

<aws enabled="true">
	<access-key>aws access key</access-key>        
	<secret-key>aws secret key</secret-key>
	<region>region</region>   
	<security-group-name>security group created with all traffic</security-group-name>
</aws>

5. Create a test folder in the home folder and execute the following command to start the master inside the test folder

java -Dlogback.configurationFile=/home/ubuntu/RaspMR/logback.xml -Dhazelcast.config.path=/home/ubuntu/RaspMR/aws-hazelcast.xml -jar ../RaspMR/target/master-jar-with-dependencies.jar

6. Follow the above instructions on slave, and to start the slave, execute the following command inside the test folder

java -Dlogback.configurationFile=/home/ubuntu/RaspMR/logback.xml -Dhazelcast.config.path=/home/ubuntu/RaspMR/aws-hazelcast.xml -jar ../RaspMR/target/slave-jar-with-dependencies.jar

7. Under /home/ubuntu/testing folder
	We have
		fs-data: input split
		logs: all logs
		mr-job: map, shuffle and required output

8. All logs can be seen at
	/home/ubuntu/testing folder/logs
app.log: gives details of all the logs generated by our application
rasp-discovery.log: gives the details of discovered machines
