package com.rasp.utils.protobuf;

option java_package          = "com.rasp.mr";
option java_outer_classname  = "STaskProtos";
option java_generic_services = true;

message STask {
    required string id           = 1;
    required string jobId        = 2;
    optional int32  inputSplitId = 3;
    optional string className    = 4;
    required STaskType taskType  = 5;
    optional string ip    = 6;
    optional string key    = 7;

    enum STaskType {
        MAPPER  = 1;
        REDUCER = 2;
        SHUFFLE = 3;
    }
}

message SJob{
    required string jobId        = 1;
}

message SMapResponse {
    required string id = 1;

    message SKeyCount {
        required string key  = 1;
        required int64 count = 2;
    }

    repeated SKeyCount mapCount = 3;
}

message SDataTransferTask {
    required string key                = 1;
    required SReducerLocation location = 2;

    message SReducerLocation {
        required string ip  = 1;
        required int32 port = 2;
    }
}

message STransferResponse {
    optional string status = 1;
}

message SShuffleResponse {
    optional string taskId = 1;
}


message SReduceResponse {
    optional string taskId = 1;
}



message STransferKeyData{
    required string key = 1;
    optional bytes data = 2;
    optional SDataHost dataHost = 3;
    optional string jobId = 4;


    message SDataHost {
        required string ip         = 1;
        required int32 port        = 2;
    }
}

service TaskService {

    rpc sendTask(STask) returns (STransferResponse);

    rpc initiateTransferDataForKey(STransferKeyData) returns (STransferResponse);
    rpc transferDataForKey(STransferKeyData) returns (STransferResponse);
    rpc terminateTransferDataForKey(STransferKeyData) returns (STransferResponse);
    rpc cleanup(SJob) returns (STransferResponse);

}

service JobService {
    rpc sendMapResponse(SMapResponse) returns (STransferResponse);
    rpc shuffleDataTransferCompleted(SShuffleResponse) returns (STransferResponse);
    rpc reduceCompleted(SReduceResponse) returns (STransferResponse);
}