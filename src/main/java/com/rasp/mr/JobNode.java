/**
 * Author : Rahul Madhavan
 * File   : JobNode.java
 * Email  : rahulk@ccs.neu.edu
 * Created: Apr 3, 2015
 */


package com.rasp.mr;

/* Import list */
import com.google.protobuf.ServiceException;
import com.rasp.utils.autodiscovery.Service;

import java.util.Map;

/**
 *  Represents the node(machine) which would run the {@link com.rasp.mr.JobTracker}
 *  and {@link com.rasp.mr.master.JobScheduler}
 *
 */
public interface JobNode
{

    /**
     * this method is used to notify the {@link com.rasp.mr.MapperMaster}
     * the completion of the {@link com.rasp.mr.MapperTask}
     *
     * @param taskId the taskId of the map task that is completed
     * @param keyCount the frequency of the keys generated by the map task
     * @throws ServiceException
     */
    public void mapCompleted(String taskId, Map<String,Long> keyCount)
        throws ServiceException;

    /**
     * this method is used to notify the {@link com.rasp.shuffle.ShuffleMaster}
     * the completion of the {@link com.rasp.mr.ShuffleTask}
     *
     * @param taskId the taskId of the shuffle task that is completed
     * @throws ServiceException
     */
    public void shuffleDataTransferCompleted(String taskId) throws ServiceException;

    /**
     * this method is used to notify the {@link com.rasp.mr.ReducerMaster}
     * the completion of the {@link com.rasp.mr.ReducerTask}
     *
     * @param taskId the taskId of the reduce task that is completed
     * @throws ServiceException
     */
    public void reduceCompleted(String taskId) throws ServiceException;

    /**
     *
     * @return the service on which the job node is running
     */
    public Service getService();

}
/* End of KeyPacket.java */